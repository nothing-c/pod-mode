=pod

=head1 POD-mode: Emacs Plain Old Documentation format major mode

=for html <img src="mascot.jpg" alt="pod-mode mascot">

=head2 Thoughts

There's a good way to do this (parsing the podfile and operating on lisp lists), which isn't the way I'm going to do it. 
Instead, I shall be using the time-tested technique of blind macros and the less-tested technique of L<structural regex|https://doc.cat-v.org/bell_labs/structural_regexps/>.

=head2 Overview

=head3 Keymap

Structural = M, markup = C (that way I can reuse mnemonic binds)

Headings: C-c M-1/2/3/4/5/6

List: C-c M-l (list)

Item: C-c M-i (item)

Begin/end: C-c M-b (block)

For: C-c M-f

Italic: C-c C-S-i (italicize region), C-c C-i (insert italics)

Bold: C-c C-S-b (bold region), C-c C-b (insert bold)

Link: C-c C-S-l (link region), C-c C-l (insert link)

Code: C-c C-S-c (code region), C-c C-c (insert code)

Escape: C-c C-e

Filename: C-c C-f

Nonbreaking space text: C-c C-S-s (region), C-c C-s (insert)

ZZ<><Z<>>: C-c C-z

Render: C-c C-r

Render and display as HTML: C-c M-r

=head3 Installation

=over

=item Stick pod-mode.el in your C<~/.emacs.d> or equivalent

=item Stick C<(require 'pod-mode)> in your F<init.el> or F<.emacs> (making sure that it's in your C<load-path>)

=back

=head3 Variables

=over

=item C<pod-renderer>: which pod2xxx renderer you want to use (pod2html is the default; on most Perl installs, pod2html, pod2text, pod2man, and pod2latex are available)

=item C<pod-render-options>: what options you want C<pod-renderer> to be called with (default is an empty string)

=back

=head2 Resources

L<Keymapping|http://xahlee.info/emacs/emacs/elisp_create_major_mode_keymap.html>

L<POD overview|https://perldoc.perl.org/perlpod>

=cut
